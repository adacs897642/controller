{"version":3,"sources":["components/modals/ChangeNameObject.js","components/modals/ChangePhoneNumberObject.js","components/modals/ChangePeriodSendObject.js","store/appState.js","components/modals/FirstPowerOn.js","components/modals/TimeSending.js","components/modals/ChanegSettingsObject.js","components/modals/Gas.js","components/modals/Info.js","components/modals/ResetController.js","components/modals/PowerOffController.js","components/modals/ResetSettings.js","pages/config.js","components/NavBar.js","components/Title.js","App.js","index.js"],"names":["ChangeNameObject","show","onHide","store","validationSchema","yup","shape","name","typeError","required","Modal","size","centered","Header","closeButton","Title","id","initialValues","obj_name","phone","obj_phone","validateOnBlur","onSubmit","values","socket","readyState","send","JSON","stringify","method","idObj","id_obj","setFlagMsg","console","log","setMsg","handleOnSubmit","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","Body","Form","Control","className","type","onChange","onBlur","value","placeholder","Footer","Button","variant","disabled","onClick","ChangePhoneNumberObject","phoneNumber","matches","phone_old","slice","checkPhone","OverlayTrigger","placement","overlay","Tooltip","ChangePeriodSendObject","time","min","max","integer","obj_id","msg","flag_msg","makeAutoObservable","this","flag","FirstPowerOn","appState","TimeSending","Label","ChanegSettingsObject","phoneRegExp","phoneNumberP1","phoneNumberP2","timeT1","timeT2","setC1","setC2","Row","Col","md","Gas","Info","ResetController","PowerOffController","ResetSettings","Config","useState","nameVisible","setNameVisible","phoneVisible","setPhoneVisible","periodVisible","setPeriodVisible","timeSendingVisible","setTimeSendingVisible","firstPowerOnVisible","setFirstPowerOnVisible","settingsVisible","setSettingsVisible","gasVisible","setGasVisible","powerOffVisible","setPowerOffVisible","restartVisible","setRestartVisible","resetSettingsView","setResetSettingsView","Container","style","display","justifyContent","Card","Text","NavBar","Navbar","bg","NavLink","to","color","Nav","Link","href","textAlign","App","observer","infoVisible","setInfoVisible","useEffect","handleOnMessage","parse","setObjName","setObjPhone","connectionHandler","message","WebSocket","window","location","hostname","process","SERVER_WS_PORT","setSocket","setObjId","onopen","userName","onerror","e","onmessage","ev","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28c334fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport './index.css'\r\n\r\nconst ChangeNameObject = ({show, onHide, store}) => {\r\n    const validationSchema = yup.object().shape({\r\n        name: yup.string().typeError('Должно быть строкой').required('Обязательно'),\r\n    })\r\n    const handleOnSubmit = (values) => {\r\n        onHide()\r\n        if(store.socket.readyState===1) {\r\n            store.socket.send(JSON.stringify({\r\n                    method: 'change_name',\r\n                    idObj: store.id_obj,\r\n                    values:values\r\n                }\r\n            ))\r\n        }\r\n        else{\r\n            store.setFlagMsg(true)\r\n            console.log('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n            store.setMsg('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Название перехода\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Formik initialValues={{\r\n                name: store.obj_name,\r\n                phone: store.obj_phone\r\n            }}\r\n                    validateOnBlur\r\n                    onSubmit={(values) => handleOnSubmit(values)}\r\n                    validationSchema={validationSchema}\r\n\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) =>\r\n                    <div>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Control className={\"input\"} type=\"text\" name={`name`} onChange={handleChange}\r\n                                              onBlur={handleBlur} value={values.name} placeholder={\"Введите новое название перехода\"}/>\r\n                                {touched.name && errors.name && <p className={`error`}>{errors.name}</p>}\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer className={\"footer\"}>\r\n                            <Button className={\"ml-2\"} variant={\"outline-success\"}\r\n                                    disabled={!isValid || !dirty} onClick={handleSubmit}\r\n                                    type={`submit`}>Отправить</Button>\r\n                            <Button variant={\"outline-danger\"} onClick={onHide}>Закрыть</Button>\r\n                        </Modal.Footer>\r\n                    </div>\r\n                }\r\n            </Formik>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ChangeNameObject;","import React from 'react';\r\nimport {Form, Modal, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport {Formik} from 'formik'\r\nimport * as yup from 'yup'\r\nimport './index.css'\r\n\r\nconst ChangePhoneNumberObject = ({show, onHide, store}) => {\r\n        const phoneRegExp = /^((\\+7|7|8)[9]([0-9]){9})$/\r\n\r\n        const validationSchema = yup.object().shape({\r\n            phoneNumber: yup.string().typeError('Должно быть строкой').matches(phoneRegExp, 'Неправильный номер телефона').required('Обязательно')\r\n        })\r\n        const checkPhone = (values)=>{\r\n            if(values.phoneNumber[0] ==='+'){\r\n                values.phoneNumber=values.phoneNumber.slice(1,)\r\n            }\r\n            if(values.phoneNumber[0] ==='8'){\r\n                values.phoneNumber='7' + values.phoneNumber.slice(1,)\r\n            }\r\n            return values\r\n        }\r\n        const handleOnSubmit = (values) => {\r\n            values = checkPhone(values)\r\n            onHide()\r\n            if (store.socket.readyState === 1) {\r\n                store.socket.send(JSON.stringify({\r\n                        method: 'change_phone_number',\r\n                        idObj: store.id_obj,\r\n                        values: values\r\n                    }\r\n                ))\r\n            } else {\r\n                store.setFlagMsg(true)\r\n                console.log('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n                store.setMsg('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                show={show}\r\n                onHide={onHide}\r\n                size=\"lg\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Номер перехода\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Formik initialValues={{\r\n                    phoneNumber: store.obj_phone,\r\n                    phone_old: store.obj_phone\r\n                }}\r\n                        validateOnBlur\r\n                        onSubmit={(values) => handleOnSubmit(values)}\r\n                        validationSchema={validationSchema}\r\n                >\r\n                    {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) =>\r\n                        <div>\r\n                            <Modal.Body>\r\n                                <Form>\r\n                                    <Form.Control className={\"input\"} type=\"text\" name={`phoneNumber`}\r\n                                                  onChange={handleChange}\r\n                                                  onBlur={handleBlur} value={values.phoneNumber}\r\n                                                  placeholder={\"Введите новый номер телефона\"}/>\r\n\r\n\r\n                                    {touched.phoneNumber && errors.phoneNumber &&\r\n                                    <OverlayTrigger placement=\"bottom\"\r\n                                                    overlay={<Tooltip id=\"tooltip-disabled\">Формат телефона должен быть\r\n                                                        89101234567 либо +79101234567</Tooltip>}>\r\n                                        <div className={`error`}>{errors.phoneNumber}<span\r\n                                            className=\"material-icons error__ico\">help_outline</span></div>\r\n                                    </OverlayTrigger>\r\n                                    }\r\n                                </Form>\r\n                            </Modal.Body>\r\n                            <Modal.Footer className={\"footer\"}>\r\n                                <button className={\"ml-2 btn btn-outline-success\"}\r\n                                        disabled={!isValid || !dirty} onClick={handleSubmit}\r\n                                        type={`submit`}>Отправить\r\n                                </button>\r\n                                <button className={\"btn btn-outline-danger\"} onClick={onHide}>Закрыть</button>\r\n                            </Modal.Footer>\r\n                        </div>\r\n                    }\r\n                </Formik>\r\n            </Modal>\r\n        );\r\n    }\r\n;\r\n\r\nexport default ChangePhoneNumberObject;","import React from 'react';\r\nimport {Button, Form, Modal, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport './index.css'\r\n\r\nconst ChangePeriodSendObject = ({show, onHide, store}) => {\r\n    const validationSchema = yup.object().shape({\r\n        time: yup.number().min(60,'Минимальное значение 60').max(1440, 'Максимальное значение 1440').typeError('Должно быть числом').integer().required('Обязательно'),\r\n    })\r\n    const handleOnSubmit = (values) => {\r\n        onHide()\r\n        if(store.socket.readyState===1) {\r\n            store.socket.send(JSON.stringify({\r\n                    method: 'change_period',\r\n                    idObj: store.id_obj,\r\n                    values:values\r\n                }\r\n            ))\r\n        }\r\n        else{\r\n            store.setFlagMsg(true)\r\n            console.log('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n            store.setMsg('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Период опроса\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Formik initialValues={{\r\n                time: '',\r\n                phone: store.obj_phone\r\n            }}\r\n                    validateOnBlur\r\n                    onSubmit={(values) => handleOnSubmit(values)}\r\n                    validationSchema={validationSchema}\r\n\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) =>\r\n                    <div>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Control className={\"input\"} type=\"text\" name={`time`} onChange={handleChange}\r\n                                              onBlur={handleBlur} value={values.time} placeholder={\"Введите новый период опроса перехода в минутах\"}/>\r\n                                {touched.time && errors.time &&\r\n                                <OverlayTrigger placement=\"bottom\"\r\n                                                overlay={<Tooltip id=\"tooltip-disabled\">Диапазон значений должен быть от 60 до 1440</Tooltip>}>\r\n                                    <div className={`error`}>{errors.time}<span\r\n                                        className=\"material-icons error__ico\">help_outline</span></div>\r\n                                </OverlayTrigger>\r\n                                }\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer className={\"footer\"}>\r\n                            <Button className={\"ml-2\"} variant={\"outline-success\"}\r\n                                    disabled={!isValid || !dirty} onClick={handleSubmit}\r\n                                    type={`submit`}>Отправить</Button>\r\n                            <Button variant={\"outline-danger\"} onClick={onHide}>Закрыть</Button>\r\n                        </Modal.Footer>\r\n                    </div>\r\n                }\r\n            </Formik>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ChangePeriodSendObject;","import {makeAutoObservable} from \"mobx\"\r\n\r\nclass AppState{\r\n    socket = null\r\n    obj_id = null\r\n    obj_name = ''\r\n    obj_phone = ''\r\n    msg = ''\r\n    flag_msg = false\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setSocket(socket){\r\n        this.socket = socket\r\n    }\r\n\r\n    setObjId(id){\r\n        this.obj_id = id\r\n    }\r\n\r\n    setFlagMsg(flag){\r\n        this.flag_msg = flag\r\n    }\r\n\r\n    setMsg(msg){\r\n        this.msg = msg\r\n     }\r\n    setObjName(name){\r\n        this.obj_name = name\r\n    }\r\n    setObjPhone(phone){\r\n        this.obj_phone = phone\r\n    }\r\n}\r\n\r\nexport default new AppState()","import React from 'react';\r\nimport {Form, Modal} from \"react-bootstrap\";\r\nimport {Formik} from 'formik'\r\nimport * as yup from 'yup'\r\nimport './index.css'\r\nimport appState from \"../../store/appState\";\r\n\r\nconst FirstPowerOn = ({show, onHide, store}) => {\r\n    const phoneRegExp = /^((\\+79|79|89)+([0-9]){9})$/\r\n\r\n    const validationSchema = yup.object().shape({\r\n        phoneNumber: yup.string().typeError('Должно быть строкой').matches(phoneRegExp, 'Неправильный номер телефона').required('Обязательно')\r\n    })\r\n\r\n    const handleOnSubmit = (values) => {\r\n        onHide()\r\n        if(store.socket.readyState===1) {\r\n            store.socket.send(JSON.stringify({\r\n                    method: 'firstPowerOn',\r\n                    values\r\n                }\r\n            ))\r\n        }\r\n        else{\r\n            appState.setFlagMsg(true)\r\n            console.log('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n            store.setMsg('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Номер УОИ сбора данных\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Formik initialValues={{\r\n                phoneNumber: ''\r\n            }}\r\n                    validateOnBlur\r\n                    onSubmit={(values) => handleOnSubmit(values)}\r\n                    validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) =>\r\n                    <div>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Control className={\"input\"} type=\"text\" name={`phoneNumber`} onChange={handleChange}\r\n                                              onBlur={handleBlur} value={values.phoneNumber} placeholder={\"Введите номер телефона\"}/>\r\n                                {touched.phoneNumber && errors.phoneNumber && <p className={`error`}>{errors.phoneNumber}</p>}\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer className={\"footer\"}>\r\n                            <button className={\"ml-2 btn btn-outline-success\"}\r\n                                    disabled={!isValid || !dirty} onClick={handleSubmit}\r\n                                    type={`submit`}>Отправить</button>\r\n                            <button className={\"btn btn-outline-danger\"}  onClick={onHide}>Закрыть</button>\r\n                        </Modal.Footer>\r\n                    </div>\r\n                }\r\n            </Formik>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default FirstPowerOn;","import React from 'react';\r\nimport {Form, Modal, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport {Formik} from 'formik'\r\nimport * as yup from 'yup'\r\nimport './index.css'\r\nimport appState from \"../../store/appState\";\r\n\r\nconst TimeSending = ({show, onHide, store}) => {\r\n    const phoneRegExp = /^((\\+79|79|89)+([0-9]){9})$/\r\n\r\n    const validationSchema = yup.object().shape({\r\n        phoneNumber: yup.string().typeError('Должно быть строкой').matches(phoneRegExp, 'Неправильный номер телефона').required('Обязательно'),\r\n        time: yup.number().min(6,'Минимальное значение 6 часов').max(168, 'Максимальное значение 168 часов').typeError('Должно быть числом').integer().required('Обязательно'),\r\n    })\r\n    const handleOnSubmit = (values) => {\r\n        onHide()\r\n        if(store.socket.readyState===1) {\r\n            store.socket.send(JSON.stringify({\r\n                    method: 'time_send',\r\n                    idObj: store.id_obj,\r\n                    values:values\r\n                }\r\n            ))\r\n        }\r\n        else{\r\n            appState.setFlagMsg(true)\r\n            console.log('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n            store.setMsg('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Параметры рассылки\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Formik initialValues={{\r\n                phoneNumber: '',\r\n                time: ''\r\n            }}\r\n                    validateOnBlur\r\n                    onSubmit={(values) => handleOnSubmit(values)}\r\n                    validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched,\r\n                      handleChange, handleBlur,\r\n                      isValid, handleSubmit, dirty}) =>\r\n                    <div>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Label>Номер телефона получателя</Form.Label>\r\n                                <Form.Control className={\"input\"} type=\"text\" name={`phoneNumber`} onChange={handleChange}\r\n                                              onBlur={handleBlur} value={values.phoneNumber} placeholder={\"Введите номер телефона\"}/>\r\n                                {touched.phoneNumber && errors.phoneNumber &&\r\n                                <OverlayTrigger placement=\"bottom\"\r\n                                                overlay={<Tooltip id=\"tooltip-disabled\">Формат телефона должен\r\n                                                    быть\r\n                                                    89101234567 либо +79101234567</Tooltip>}>\r\n                                    <div className={`error`}>{errors.phoneNumber}<span\r\n                                        className=\"material-icons error__ico\">help_outline</span></div>\r\n                                </OverlayTrigger>\r\n                                }\r\n                                <Form.Label className={\"mt-4\"}>Период отправки данных</Form.Label>\r\n                                <Form.Control className={\"input\"} type=\"text\" name={`time`} onChange={handleChange}\r\n                                              onBlur={handleBlur} value={values.time} placeholder={\"Введите новый период опроса перехода в минутах\"}/>\r\n                                {touched.time && errors.time &&\r\n                                <OverlayTrigger placement=\"bottom\"\r\n                                                overlay={<Tooltip id=\"tooltip-disabled\">Диапазон значений должен быть от 60 до 1440</Tooltip>}>\r\n                                    <div className={`error`}>{errors.time}<span\r\n                                        className=\"material-icons error__ico\">help_outline</span></div>\r\n                                </OverlayTrigger>\r\n                                }\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer className={\"footer\"}>\r\n                            <button className={\"ml-2 btn btn-outline-success\"}\r\n                                    disabled={!isValid || !dirty} onClick={handleSubmit}\r\n                                    type={`submit`}>Отправить</button>\r\n                            <button className={\"btn btn-outline-danger\"}  onClick={onHide}>Закрыть</button>\r\n                        </Modal.Footer>\r\n                    </div>\r\n                }\r\n            </Formik>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default TimeSending;","import React from 'react';\r\nimport {Col, Form, Modal, OverlayTrigger, Row, Tooltip} from \"react-bootstrap\";\r\nimport {Formik} from 'formik'\r\nimport * as yup from 'yup'\r\nimport './index.css'\r\nimport appState from \"../../store/appState\";\r\n\r\nconst ChanegSettingsObject = ({show, onHide, store}) => {\r\n    const phoneRegExp = /^((\\+79|79|89)+([0-9]){9})$/\r\n\r\n    const validationSchema = yup.object().shape({\r\n        phoneNumberP1: yup.string().typeError('Должно быть строкой').matches(phoneRegExp, 'Неправильный номер телефона').required('Обязательно'),\r\n        phoneNumberP2: yup.string().typeError('Должно быть строкой').matches(phoneRegExp, 'Неправильный номер телефона').required('Обязательно'),\r\n        timeT1: yup.number().min(60, 'Минимальное значение 60 минут').max(1440, 'Максимальное значение 1440 минут').typeError('Должно быть числом').integer('Должно быть целым числом').required('Обязательно'),\r\n        timeT2: yup.number().min(10, 'Минимальное значение 10 минут').max(1440, 'Максимальное значение 1440 минут').typeError('Должно быть числом').integer('Должно быть целым числом').required('Обязательно'),\r\n        setC1: yup.number().min(0, 'Минимальное значение 0').max(1000, 'Максимальное значение 1000').typeError('Должно быть числом').integer('Должно быть целым числом').required('Обязательно'),\r\n        setC2: yup.number().min(0, 'Минимальное значение 0').max(1000, 'Максимальное значение 1000').typeError('Должно быть числом').integer('Должно быть целым числом').required('Обязательно'),\r\n    })\r\n    const handleOnSubmit = (values) => {\r\n        onHide()\r\n        if(store.socket.readyState===1) {\r\n            store.socket.send(JSON.stringify({\r\n                    method: 'gas',\r\n                    idObj: store.id_obj,\r\n                    values:values\r\n                }\r\n            ))\r\n        }\r\n        else{\r\n            appState.setFlagMsg(true)\r\n            console.log('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n            store.setMsg('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Параметры АПК П\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Formik initialValues={{\r\n                phoneNumberP1: '',\r\n                phoneNumberP2: '',\r\n                timeT1: '',\r\n                timeT2: '',\r\n                setC1:'',\r\n                setC2:'',\r\n                phone: store.obj_phone\r\n            }}\r\n                    validateOnBlur\r\n                    onSubmit={(values) => handleOnSubmit(values)}\r\n                    validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) =>\r\n                    <div>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <Form.Label>Номер телефона в основном режиме (Р1)</Form.Label>\r\n                                        <Form.Control className={\"input\"} type=\"text\" name={`phoneNumberP1`}\r\n                                                      onChange={handleChange}\r\n                                                      onBlur={handleBlur} value={values.phoneNumberP1}\r\n                                                      placeholder={\"Введите номер телефона\"}/>\r\n                                        {touched.phoneNumberP1 && errors.phoneNumberP1 &&\r\n                                        <OverlayTrigger placement=\"bottom\"\r\n                                                        overlay={<Tooltip id=\"tooltip-disabled\">Формат телефона должен\r\n                                                            быть\r\n                                                            89101234567 либо +79101234567</Tooltip>}>\r\n                                            <div className={`error`}>{errors.phoneNumberP1}<span\r\n                                                className=\"material-icons error__ico\">help_outline</span></div>\r\n                                        </OverlayTrigger>\r\n                                        }\r\n                                        <Form.Label className={\"mt-4\"}>Номер телефона в тестовом режиме\r\n                                            (Р2)</Form.Label>\r\n                                        <Form.Control className={\"input\"} type=\"text\" name={`phoneNumberP2`}\r\n                                                      onChange={handleChange}\r\n                                                      onBlur={handleBlur} value={values.phoneNumberP2}\r\n                                                      placeholder={\"Введите номер телефона\"}/>\r\n                                        {touched.phoneNumberP2 && errors.phoneNumberP2 &&\r\n                                        <OverlayTrigger placement=\"bottom\"\r\n                                                        overlay={<Tooltip id=\"tooltip-disabled\">Формат телефона должен\r\n                                                            быть\r\n                                                            89101234567 либо +79101234567</Tooltip>}>\r\n                                            <div className={`error`}>{errors.phoneNumberP2}<span\r\n                                                className=\"material-icons error__ico\">help_outline</span></div>\r\n                                        </OverlayTrigger>\r\n                                        }\r\n                                        <Form.Label className={\"mt-4\"}>Период отчетов в основном режиме\r\n                                            (Т1)</Form.Label>\r\n                                        <Form.Control className={\"input\"} type=\"text\" name={`timeT1`}\r\n                                                      onChange={handleChange}\r\n                                                      onBlur={handleBlur} value={values.timeT1}\r\n                                                      placeholder={\"Введите период в минутах\"}/>\r\n                                        {touched.timeT1 && errors.timeT1 &&\r\n                                        <OverlayTrigger placement=\"bottom\"\r\n                                                        overlay={<Tooltip id=\"tooltip-disabled\">Диапазон значений должен\r\n                                                            быть от 60 до 1440</Tooltip>}>\r\n                                            <div className={`error`}>{errors.timeT1}<span\r\n                                                className=\"material-icons error__ico\">help_outline</span></div>\r\n                                        </OverlayTrigger>\r\n                                        }\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <Form.Label>Период проверки входящих сообщений (Т2)</Form.Label>\r\n                                        <Form.Control className={\"input\"} type=\"text\" name={`timeT2`}\r\n                                                      onChange={handleChange}\r\n                                                      onBlur={handleBlur} value={values.timeT2}\r\n                                                      placeholder={\"Введите период в минутах\"}/>\r\n                                        {touched.timeT2 && errors.timeT2 &&\r\n                                        <OverlayTrigger placement=\"bottom\"\r\n                                                        overlay={<Tooltip id=\"tooltip-disabled\">Диапазон значений должен\r\n                                                            быть от 10 до 1440</Tooltip>}>\r\n                                            <div className={`error`}>{errors.timeT2}<span\r\n                                                className=\"material-icons error__ico\">help_outline</span></div>\r\n                                        </OverlayTrigger>\r\n\r\n                                        }\r\n                                        <Form.Label className={\"mt-4\"}>Уставка предупредительного режима\r\n                                            (С1)</Form.Label>\r\n                                        <Form.Control className={\"input\"} type=\"text\" name={`setC1`}\r\n                                                      onChange={handleChange}\r\n                                                      onBlur={handleBlur} value={values.setC1}\r\n                                                      placeholder={\"Введите значение в %CH4 * 0.1\"}/>\r\n                                        {touched.setC1 && errors.setC1 &&\r\n                                        <OverlayTrigger placement=\"bottom\"\r\n                                                        overlay={<Tooltip id=\"tooltip-disabled\">Диапазон значений должен\r\n                                                            быть от 0 до 1000</Tooltip>}>\r\n                                            <div className={`error`}>{errors.setC1}<span\r\n                                                className=\"material-icons error__ico\">help_outline</span></div>\r\n                                        </OverlayTrigger>\r\n                                        }\r\n                                        <Form.Label className={\"mt-4\"}>Уставка аварийного режима (С2)</Form.Label>\r\n                                        <Form.Control className={\"input\"} type=\"text\" name={`setC2`}\r\n                                                      onChange={handleChange}\r\n                                                      onBlur={handleBlur} value={values.setC2}\r\n                                                      placeholder={\"Введите значение в %CH4 * 0.1\"}/>\r\n                                        {touched.setC2 && errors.setC2 &&\r\n                                        <OverlayTrigger placement=\"bottom\"\r\n                                                        overlay={<Tooltip id=\"tooltip-disabled\">Диапазон значений должен\r\n                                                            быть от 0 до 1000</Tooltip>}>\r\n                                            <div className={`error`}>{errors.setC2}<span\r\n                                                className=\"material-icons error__ico\">help_outline</span></div>\r\n                                        </OverlayTrigger>\r\n\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer className={\"footer\"}>\r\n                            <button className={\"ml-2 btn btn-outline-success\"}\r\n                                    disabled={!isValid || !dirty} onClick={handleSubmit}\r\n                                    type={`submit`}>Отправить\r\n                            </button>\r\n                            <button className={\"btn btn-outline-danger\"} onClick={onHide}>Закрыть</button>\r\n                        </Modal.Footer>\r\n                    </div>\r\n                }\r\n            </Formik>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ChanegSettingsObject;","import React from 'react';\r\nimport {Form, Modal} from \"react-bootstrap\";\r\nimport {Formik} from 'formik'\r\nimport * as yup from 'yup'\r\nimport './index.css'\r\nimport appState from \"../../store/appState\";\r\n\r\n\r\nconst Gas = ({show, onHide, store}) => {\r\n    const phoneRegExp = /^((\\+79|79|89)+([0-9]){9})$/\r\n\r\n    const validationSchema = yup.object().shape({\r\n        phoneNumber: yup.string().typeError('Должно быть строкой').matches(phoneRegExp, 'Неправильный номер телефона').required('Обязательно')\r\n    })\r\n\r\n    const handleOnSubmit = (values) => {\r\n        onHide()\r\n        if(store.socket.readyState===1) {\r\n            store.socket.send(JSON.stringify({\r\n                method: 'gas',\r\n                idObj: store.id_obj,\r\n                values:values\r\n                }\r\n            ))\r\n        }\r\n        else{\r\n            appState.setFlagMsg(true)\r\n            console.log('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n            store.setMsg('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Номер получателя рассылки по загазованности\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Formik initialValues={{\r\n                phoneNumber: ''\r\n            }}\r\n                    validateOnBlur\r\n                    onSubmit={(values) => handleOnSubmit(values)}\r\n                    validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) =>\r\n                    <div>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Control className={\"input\"} type=\"text\" name={`phoneNumber`} onChange={handleChange}\r\n                                              onBlur={handleBlur} value={values.phoneNumber} placeholder={\"Введите новый номер телефона\"}/>\r\n                                {touched.phoneNumber && errors.phoneNumber && <p className={`error`}>{errors.phoneNumber}</p>}\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer className={\"footer\"}>\r\n                            <button className={\"ml-2 btn btn-outline-success\"}\r\n                                    disabled={!isValid || !dirty} onClick={handleSubmit}\r\n                                    type={`submit`}>Отправить</button>\r\n                            <button className={\"btn btn-outline-danger\"}  onClick={onHide}>Закрыть</button>\r\n                        </Modal.Footer>\r\n                    </div>\r\n                }\r\n            </Formik>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default Gas;","import React from 'react'\r\nimport {Modal} from 'react-bootstrap'\r\nimport './index.css'\r\n\r\nconst Info = ({show, onHide, msg}) => {\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Информация\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>{msg}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer  className={\"footer\"}>\r\n                <button className={\"btn btn-outline-danger\"} onClick={onHide}>Закрыть</button>\r\n            </Modal.Footer>\r\n\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Info;","import React, {useState} from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport Info from \"./Info\";\r\nimport appState from \"../../store/appState\";\r\n\r\nconst ResetController = ({show, onHide, store}) => {\r\n\r\n    const handlerOnSubmit = () => {\r\n        onHide()\r\n        if(store.socket.readyState===1) {\r\n            store.socket.send(JSON.stringify({\r\n                    method: 'reset_controller',\r\n                }\r\n            ))\r\n        }\r\n        else{\r\n            appState.setFlagMsg(true)\r\n            console.log('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n            store.setMsg('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={onHide} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Управление</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Перезагрузить контроллер?</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-success\" onClick={onHide}>\r\n                    Отмена\r\n                </Button>\r\n                <Button variant=\"outline-danger\" onClick={handlerOnSubmit} type={\"submit\"}>\r\n                    Применить\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ResetController;","import React from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport appState from \"../../store/appState\";\r\n\r\nconst PowerOffController = ({show, onHide, store}) => {\r\n    const handleOnSubmit= ()=>{\r\n        onHide()\r\n        if(store.socket.readyState===1) {\r\n            store.socket.send(JSON.stringify({\r\n                    method: 'power_off_controller',\r\n                }\r\n            ))\r\n        }\r\n        else{\r\n            appState.setFlagMsg(true)\r\n            console.log('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n            store.setMsg('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n        }\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={onHide} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Управление</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Выключить контроллер?</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-success\" onClick={onHide}>\r\n                    Отмена\r\n                </Button>\r\n                <Button variant=\"outline-danger\" onClick={handleOnSubmit} type={\"submit\"}>\r\n                    Применить\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default PowerOffController;","import React from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport appState from \"../../store/appState\";\r\n\r\nconst ResetSettings = ({show, onHide, store}) => {\r\n    const handleOnSubmit= ()=>{\r\n        onHide()\r\n        if(store.socket.readyState===1) {\r\n            store.socket.send(JSON.stringify({\r\n                    method: 'reset_settings',\r\n                }\r\n            ))\r\n        }\r\n        else{\r\n            appState.setFlagMsg(true)\r\n            console.log('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n            store.setMsg('Ошибка передачи данных на сервер. Проверьте соединение и обновите страницу')\r\n        }\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={onHide} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Управление</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Установить заводские настройки?</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-success\" onClick={onHide}>\r\n                    Отмена\r\n                </Button>\r\n                <Button variant=\"outline-danger\" onClick={handleOnSubmit} type={\"submit\"}>\r\n                    Применить\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ResetSettings;","import React, {useState} from 'react';\r\nimport {Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport ChangeNameObject from \"../components/modals/ChangeNameObject\";\r\nimport ChangePhoneNumberObject from \"../components/modals/ChangePhoneNumberObject\";\r\nimport ChangePeriodSendObject from \"../components/modals/ChangePeriodSendObject\";\r\nimport FirstPowerOn from \"../components/modals/FirstPowerOn\";\r\nimport TimeSending from \"../components/modals/TimeSending\";\r\nimport ChanegSettingsObject from \"../components/modals/ChanegSettingsObject\";\r\nimport Gas from \"../components/modals/Gas\";\r\nimport ResetController from \"../components/modals/ResetController\";\r\nimport PowerOffController from \"../components/modals/PowerOffController\";\r\nimport ResetSettings from \"../components/modals/ResetSettings\";\r\nimport appState from \"../store/appState\";\r\n\r\n\r\nconst Config = () => {\r\n    const [nameVisible, setNameVisible] = useState(false)\r\n    const [phoneVisible, setPhoneVisible] = useState(false)\r\n    const [periodVisible, setPeriodVisible] = useState(false)\r\n    const [timeSendingVisible, setTimeSendingVisible] = useState(false)\r\n    const [firstPowerOnVisible, setFirstPowerOnVisible] = useState(false)\r\n    const [settingsVisible, setSettingsVisible] = useState(false)\r\n    const [gasVisible, setGasVisible] = useState(false)\r\n    const [powerOffVisible, setPowerOffVisible] = useState(false)\r\n    const [restartVisible, setRestartVisible] = useState(false)\r\n    const [resetSettingsView, setResetSettingsView] = useState(false)\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <Container style={{display: 'flex'}}>\r\n                    <Col>\r\n                        <div className={\"block_cards\"}>\r\n                            <Row style={{justifyContent: \"center\"}}>\r\n                                <h2>Настройки АПК П СКП21</h2>\r\n                            </Row>\r\n                            <Row className={\"mt-4\"}>\r\n                                <Col md={4}>\r\n                                    <Card className={\"card-conf card__animate\"}>\r\n                                        <Card.Body onClick={() => setNameVisible(true)}>\r\n                                            <Card.Title>\r\n                                                <Row>\r\n                                                    <Col md={2}><span className=\"material-icons\">article</span></Col>\r\n                                                    <Col md={10}>Название перехода</Col>\r\n                                                </Row>\r\n\r\n                                            </Card.Title>\r\n\r\n                                            Изменение названия отображаемого перехода\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Card className={\"card-conf card__animate\"}>\r\n                                        <Card.Body onClick={() => setPhoneVisible(true)}>\r\n                                            <Card.Title>\r\n                                                <Row>\r\n                                                    <Col md={2}><span\r\n                                                        className=\"material-icons\">settings_phone</span></Col>\r\n                                                    <Col md={10}>Номер перехода</Col>\r\n                                                </Row>\r\n\r\n                                            </Card.Title>\r\n                                            Изменение телефонного номера перехода\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Card className={\"card-conf card__animate\"}>\r\n                                        <Card.Body onClick={() => setPeriodVisible(true)}>\r\n                                            <Card.Title>\r\n                                                <Row>\r\n                                                    <Col md={2}><span className=\"material-icons\">schedule</span></Col>\r\n                                                    <Col md={10}>Период опроса</Col>\r\n                                                </Row>\r\n                                            </Card.Title>\r\n                                            Настройка периода опроса перехода\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className={\"mt-4\"}>\r\n                                <Col md={4}>\r\n                                    <Card className={\"card-conf card__animate\"}>\r\n                                        <Card.Body onClick={() => setSettingsVisible(true)}>\r\n                                            <Card.Title>\r\n                                                <Row>\r\n                                                    <Col md={2}><span className=\"material-icons\">settings</span></Col>\r\n                                                    <Col md={10}>Параметры</Col>\r\n                                                </Row>\r\n                                            </Card.Title>\r\n                                            <Card.Text>\r\n                                                Настройка основных параметров перехода\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Card className={\"card-conf card__animate\"}>\r\n                                        <Card.Body onClick={() => setResetSettingsView(true)}>\r\n                                            <Card.Title>\r\n                                                <Row>\r\n                                                    <Col md={2}><span className=\"material-icons\">settings_backup_restore</span></Col>\r\n                                                    <Col md={10}>Заводские настройки</Col>\r\n                                                </Row>\r\n                                            </Card.Title>\r\n                                            <Card.Text>\r\n                                                Установка заводских параметров перехода\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </div>\r\n                        <div className={\"block_cards\"}>\r\n                            <Row style={{justifyContent: \"center\"}}>\r\n                                <h2>Настройки контроллера СКП21</h2>\r\n                            </Row>\r\n                            <Row className={\"mt-4\"}>\r\n                                <Col md={4}>\r\n                                    <Card className={\"card-conf card__animate\"}>\r\n                                        <Card.Body onClick={() => setGasVisible(true)}>\r\n                                            <Card.Title>\r\n                                                <Row>\r\n                                                    <Col md={2}><span\r\n                                                        className=\"material-icons\">access_alarm</span></Col>\r\n                                                    <Col md={10}>Загазованность</Col>\r\n                                                </Row>\r\n                                            </Card.Title>\r\n                                            <Card.Text>\r\n                                                Добавление/ удаление телефона из списка рассылки по загазованности\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Card className={\"card-conf card__animate\"}>\r\n                                        <Card.Body onClick={() => setTimeSendingVisible(true)}>\r\n                                            <Card.Title>\r\n                                                <Row>\r\n                                                    <Col md={2}><span\r\n                                                        className=\"material-icons\">schedule_send</span></Col>\r\n                                                    <Col md={10}>Рассылка</Col>\r\n                                                </Row>\r\n                                            </Card.Title>\r\n                                            Настройка рассылки данных перехода по расписанию\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Card className={\"card-conf card__animate\"}>\r\n                                        <Card.Body onClick={() => setFirstPowerOnVisible(true)}>\r\n                                            <Card.Title>\r\n                                                <Row>\r\n                                                    <Col md={2}><span className=\"material-icons\">power</span></Col>\r\n                                                    <Col md={10}>Первое включение</Col>\r\n                                                </Row>\r\n                                            </Card.Title>\r\n                                            Настройка номера телефона с информацией о первом включении\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row className={\"mt-4\"}>\r\n\r\n                                <Col md={4}>\r\n                                    <Card className={\"card-conf card__animate\"}>\r\n                                        <Card.Body onClick={() => setPowerOffVisible(true)}>\r\n                                            <Card.Title>\r\n                                                <Row>\r\n                                                    <Col md={2}><span\r\n                                                        className=\"material-icons\">power_settings_new</span></Col>\r\n                                                    <Col md={10}>Выключить контроллер</Col>\r\n                                                </Row>\r\n                                            </Card.Title>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Card className={\"card-conf card__animate\"}>\r\n                                        <Card.Body onClick={() => setRestartVisible(true)}>\r\n                                            <Card.Title>\r\n                                                <Row>\r\n                                                    <Col md={2}><span className=\"material-icons\">autorenew</span></Col>\r\n                                                    <Col md={10}>Перезагрузить контроллер</Col>\r\n                                                </Row>\r\n                                            </Card.Title>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n\r\n                    </Col>\r\n\r\n                </Container>\r\n\r\n                <ChangeNameObject show={nameVisible} onHide={() => setNameVisible(false)} store={appState}/>\r\n                <ChangePhoneNumberObject show={phoneVisible} onHide={() => setPhoneVisible(false)} store={appState}/>\r\n                <ChangePeriodSendObject show={periodVisible} onHide={() => setPeriodVisible(false)} store={appState}/>\r\n                <FirstPowerOn show={firstPowerOnVisible} onHide={() => setFirstPowerOnVisible(false)} store={appState}/>\r\n                <TimeSending show={timeSendingVisible} onHide={() => setTimeSendingVisible(false)}store={appState}/>\r\n                <ChanegSettingsObject show={settingsVisible} onHide={() => setSettingsVisible(false)} store={appState}/>\r\n                <Gas show={gasVisible} onHide={() => setGasVisible(false)} store={appState}/>\r\n                <PowerOffController show={powerOffVisible} onHide={() => setPowerOffVisible(false)} store={appState}/>\r\n                <ResetController show={restartVisible} onHide={() => setRestartVisible(false)} store={appState}/>\r\n                <ResetSettings show={resetSettingsView} onHide={()=>setResetSettingsView(false)} store={appState}/>\r\n            </Col>\r\n            {/*<Col md={2}>*/}\r\n            {/*    <Menu/>*/}\r\n            {/*</Col>*/}\r\n        </Row>\r\n    )\r\n        ;\r\n};\r\n\r\nexport default Config;","import React from 'react';\r\nimport {Nav, Navbar, NavLink} from \"react-bootstrap\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <NavLink to=\"/\" style={{color:'white'}}>НПО Энергодиагностика</NavLink>\r\n            <Nav className=\"ml-auto\">\r\n                <Nav.Link href=\"#features\">Авторизация</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport {Col, Container} from \"react-bootstrap\";\r\n\r\nconst Title = ({name}) => {\r\n    return (\r\n        <Container>\r\n            <Col md={12} style={{display:'flex', justifyContent:'center'}}>\r\n                <h2 className={`mt-5 mb-5`} style={{textAlign:\"center\"}}>{name}</h2>\r\n            </Col>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Title;","import React, {useEffect, useState} from 'react';\nimport Config from \"./pages/config\";\n\nimport NavBar from \"./components/NavBar\";\nimport Title from \"./components/Title\";\n\nimport \"./styles/app.scss\"\n\nimport {observer} from \"mobx-react-lite\";\nimport appState from \"./store/appState\";\nimport Info from \"./components/modals/Info\";\n\n\n\nconst App = observer(() => {\n\n        const [infoVisible, setInfoVisible] = useState(false)\n\n\n        useEffect(() => {\n\n            const connectionHandler = (msg) => {\n                appState.setObjName(msg.obj_name)\n                appState.setObjPhone(msg.phone)\n                console.log(appState.obj_name)\n            }\n\n            const handleOnMessage = (msg) => {\n\n                console.log(msg)\n                msg = JSON.parse(msg)\n                console.log(msg)\n                switch (msg.method) {\n                    case 'connection':\n                        connectionHandler(msg)\n                        break\n                    case 'command':\n                    case 'reset_controller':\n                    case 'power_off_controller':\n                    case 'change_period':\n                        appState.setMsg(msg.message)\n                        setInfoVisible(true)\n                        break\n                    case 'update_obj_name':\n                        appState.setMsg(msg.message)\n                        appState.setObjName(msg.obj_name)\n                        setInfoVisible(true)\n                        break\n                    case 'update_obj_phone':\n                        appState.setMsg(msg.message)\n                        appState.setObjPhone(msg.phone)\n                        setInfoVisible(true)\n                        break\n\n                }\n            }\n            const socket = new WebSocket('ws://' + window.location.hostname +':' + process.env.SERVER_WS_PORT)\n            appState.setSocket(socket)\n            appState.setObjId(1)\n            socket.onopen = () => {\n                socket.send(JSON.stringify({\n                    method: 'connection',\n                    id: 15,\n                    userName: 'Piter'\n                }))\n            }\n\n            socket.onerror = (e) => {\n                appState.setFlagMsg(true)\n                appState.setMsg('Ошибка соединения с сервером. Проверьте соединение и обновите страницу.')\n            }\n\n            socket.onmessage = (ev) => {\n                handleOnMessage(ev.data)\n            }\n\n        }, [])\n\n        if(appState.flag_msg === true)\n        {\n            setInfoVisible(true)\n            appState.setFlagMsg(false)\n        }\n\n        return (\n            <div className={\"app\"}>\n                <NavBar/>\n                <Title name={appState.obj_name}/>\n                <Config/>\n\n                <Info show={infoVisible} onHide={() => {\n                    setInfoVisible(false)\n                }} msg={appState.msg}/>\n            </div>\n        );\n    }\n);\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/index.scss';\nimport App from './App';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}